---
# Default values for plausible.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# plausible analytics configuration
## see https://plausible.io/docs/self-hosting-configuration

disableAuth: false  # Disables authentication completely, no registration, login will be shown.
disableRegistration: false  # Disables registration of new users.
baseURL: http://plausible-analytics.local  # The hosting url of the server, used for URL generation. In production systems, this should be your ingress host.
listenIP: 0.0.0.0

adminUser:
  email: admin@example.com  # Admin user's email
  name: Administrator  # Display name admin user
  password: secr3t  # Admin user password

# SECRET_KEY_BASE is Helm randAlphaNum 90

smtp:  # Plausible uses and SMTP server to send transactional emails e.g. account activation, password reset, weekly reports, etc.
  enabled: false  # Enable/Disable SMTP functionality
  mailer:
    emailAddress:  # the email address of the email sender
    adapter:
  host:  # The host address of your smtp server.
  port:  # The port of your smtp server.
  username:  # The username/email in case SMTP auth is enabled.
  password:  # The password in case SMTP auth is enabled.
  ssl:
    enabled: false  # If SSL is enabled for SMTP connection
  retries: 2  # Number of retries to make until mailer gives up.

postmark:  # Alternatively, you can use Postmark to send transactional emails. In this case, use the following parameters:
  apiKey:

geolocation:  # MaxMind geolocation database#
  enabled: false  # Enable/Disable the automated fetch of
  account_id:  # Account/User ID from maxmind.com
  license_key:  # My License Key from maxmind.com

# Google Search Integration
# See: https://docs.plausible.io/self-hosting-configuration#google-search-integration
google:
  clientID:  # The Client ID from the Google API Console for your Plausible Analytics project
  clientSecret:  # The Client Secret from the Google API Console for your Plausible Analytics project
# Twitter Integration
# https://docs.plausible.io/self-hosting-configuration#twitter-integration
twitter:
  consumer:
    key:  # The API key from the Twitter Developer Portal
    secret:  # The API key secret from the Twitter Developer Portal
  access:
    token:  # The access token you generated in the steps above
    secret:  # The access token secret you generated in the steps above

labels: {}  # Extra Labels to apply on your k8s deployment

# ------------------------------------------------------------------------------
# Postgresql:
# ------------------------------------------------------------------------------

postgresql:
  ## If true, install the Postgresql chart
  ## ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
  enabled: true
  # The URL to the Postgres Database Connection String see -> https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING
  # url postgres://postgres:postgres@plausible-analytics-postgresql:5432/plausible_db
  url: postgres://postgres:postgres@plausible-analytics-postgresql:5432/plausible_db
  auth:
    username: postgres
    # check auth.existingSecret from https://github.com/bitnami/charts/tree/main/bitnami/postgresql
    password: postgres
    database: plausible_db
  port: 5432
  host: plausible-analytics-postgresql
  replication:
    enabled: false
  metrics:
    enabled: false
  persistence:
    enabled: false

# ------------------------------------------------------------------------------
# Clickhouse:
# ------------------------------------------------------------------------------

clickhouse:  # Clickhouse Database
  enabled: true
  # The URL Connection String to clickhouse DB see -> https://clickhouse.tech/docs/en/interfaces/http/
  url: http://clickhouse:password@plausible-analytics-clickhouse:8123/plausible_events_db
  auth:
    username: clickhouse
    # password: password or check auth.existingSecret from https://github.com/bitnami/charts/tree/main/bitnami/clickhouse
    password: password
    database: plausible_events_db
  host: plausible-analytics-clickhouse
  # should be http://clickhouse.example.com if you use the initContainersHttp method
  initContainersHttp:
    enabled: false
  initContainersClient:
    enabled: true
  initdbScripts:
    db-init.sql: |
      CREATE DATABASE IF NOT EXISTS plausible_events_db
  # https://github.com/plausible/analytics/discussions/1603 clickhouse cluster is not supported yet.
  shards: 1
  replicaCount: 1
  zookeeper:
    enabled: false

# kubernetes ressources

replicaCount: 1

image:
  repository: plausible/analytics
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v2.0.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

secret:
  # Specifies if the helm chart should create a secret file
  create: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  pathType: Prefix
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
  path: /
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

## Extra environment variables definition
extraEnv: []
